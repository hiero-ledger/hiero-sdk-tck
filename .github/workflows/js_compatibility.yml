# SPDX-License-Identifier: Apache-2.0
name: "System Compatibility (JS SDK)"

permissions:
  contents: read

on:
  workflow_dispatch:
    inputs:
      custom-job-name:
        description: "The custom job name to use for the job(could include the version of the JS SDK, Solo, and consensus node):"
        required: false
        type: string
      solo-version:
        description: "The version of the Solo to use(defaults to 0.38.0 if not specified):"
        required: false
        type: string
      consensus-node-version:
        description: "The version of the consensus node to use (defaults to latest stable version tag if not specified):"
        required: false
        type: string
      js-sdk-version:
        description: "The version of the JS SDK to use (defaults to latest tag if not specified):"
        required: false
        type: string
  workflow_call:
    inputs:
      custom-job-name:
        description: "The custom job name to use for the job"
        required: false
        type: string
      solo-version:
        description: "The version of the Solo to use"
        required: false
        type: string
      consensus-node-version:
        description: "The version of the consensus node to use"
        required: false
        type: string
      js-sdk-version:
        description: "The version of the JS SDK to use"
        required: false
        type: string

defaults:
  run:
    shell: bash

jobs:
  # Execute TCK Regression Tests using specified version of hiero-consensus-node
  tck-regression:
    name: ${{ inputs.custom-job-name || 'System Compatibility' }}
    runs-on: hiero-client-sdk-linux-large
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      # Checkout the current TCK repository
      - name: Checkout TCK Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          path: tck

      # Checkout the JS-SDK server
      - name: Checkout JS-SDK Server
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          path: sdk-server
          repository: hiero-ledger/hiero-sdk-js
          fetch-depth: 0
          fetch-tags: true
          submodules: true

      # Checkout the JS-SDK Version
      - name: Checkout JS-SDK Version
        run: |
          cd sdk-server
          if [ -n "${{ inputs.js-sdk-version }}" ]; then
            echo "Using specified JS-SDK version: ${{ inputs.js-sdk-version }}"
            git checkout ${{ inputs.js-sdk-version }}
          else
            echo "Using latest JS-SDK tag"
            git fetch --tags
            LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
            echo "Latest JS-SDK tag: $LATEST_TAG"
            git checkout $LATEST_TAG
          fi

      # Install Task runner
      - name: Install Task
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v2.0.0
        with:
         version: 3.35.1

      - name: Install PNPM
        uses: step-security/action-setup@598c7206e1c7d361165e303487aa7772566a8e05 # v4.1.0
        with:
          version: 9.15.5

      # Set up the node environment
      # Version 22 is the recommended version for solo.
      - name: Setup NodeJS Environment
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 22

      # Build the JS-SDK using its task
      - name: Build JS-SDK
        run: |
          task -v build
        working-directory: sdk-server

      # Set up the npm dependencies and cache on the tck-client
      - name: Set up the tck-client
        run: |
          npm cache clean --force
          npm install
        working-directory: tck

      # Set up and start the TCK server
      - name: Install and Start TCK Server
        id: start-sdk-server
        run: |
          npm install
          nohup npm run start &
          server_pid=$!
          echo "pid=${server_pid}" >> "${GITHUB_OUTPUT}"
        working-directory: sdk-server/tck

      # Get Latest Consensus Node Version
      - name: Get Latest Consensus Node Version
        if: ${{ !inputs.consensus-node-version }}
        id: get-consensus-version
        run: |
          # Fetch latest stable version (excludes RC, beta, alpha versions)
          LATEST_TAG=$(git ls-remote --tags --refs https://github.com/hiero-ledger/hiero-consensus-node \
            | awk '{print $2}' \
            | sed 's|refs/tags/||' \
            | grep -E '^v?[0-9]+\.[0-9]+\.[0-9]+$' \
            | sort -V \
            | tail -n1)
          echo "Latest consensus node tag: $LATEST_TAG"
          echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      # Prepare Hiero Solo
      - name: Prepare Hiero Solo
        id: solo
        uses: hiero-ledger/hiero-solo-action@2fae96af5cbb8593320f2e42b7c3f8cdc4059d8a # v0.13.0
        with:
          installMirrorNode: true
          mirrorNodeVersion: v0.138.0
          hieroVersion: ${{ inputs.consensus-node-version || steps.get-consensus-version.outputs.tag }}

       # Start the TCK client
      - name: Start tck-client
        env:
          OPERATOR_ACCOUNT_ID: "0.0.2"
          OPERATOR_ACCOUNT_PRIVATE_KEY: "302e020100300506032b65700422042091132178e72057a1d7528025956fe39b0b847f200ab59b2fdd367017f3087137"
          JSON_RPC_SERVER_URL: "http://127.0.0.1:8544"
          NODE_IP: "127.0.0.1:50211"
          MIRROR_NODE_REST_URL: "http://127.0.0.1:5551"
          MIRROR_NODE_REST_JAVA_URL: "http://127.0.0.1:8084"
          NODE_TIMEOUT: "30000"
          MIRROR_NETWORK: "127.0.0.1:5600"
          NODE_ACCOUNT_ID: "0.0.3"
        run: |
          npm run test
        working-directory: tck

      # Stop the TCK server
      - name: Stop tck-server
        if: ${{ always() }}
        run: |
          echo ${{ steps.start-sdk-server.outputs.pid }}
          kill -9 ${{ steps.start-sdk-server.outputs.pid }}